---
# Variable configuration.
# - include_tasks: variables.yml

- name: "SSH | Checking for Distribution Config: {{ ansible_distribution }}"
  ansible.builtin.stat:
    path: "{{ role_path }}/tasks/{{ ansible_distribution }}.yml"
  register: system_distribution_config

- name: "SSH | Run Tasks: {{ ansible_distribution }}"
  ansible.builtin.include_tasks: "{{ ansible_distribution }}.yml"
  when: system_distribution_config.stat.exists

- name: SSH | Add additional SSH public keys
  ansible.posix.authorized_key:
    user: "{{ ansible_user }}"
    key: "{{ item }}"
  loop:
    - "{{ github_ssh_keys | default([]) }}"

- name: Copy config
  ansible.builtin.template:
    dest: "{{ ansible_user_dir }}/.ssh/config"
    src: "config.j2"

- name: SSH | Start SSH service
  ansible.builtin.service:
    name: ssh
    state: started

- name: SSH | Update SSH configuration
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    validate: sshd -T -f %s
    mode: "0644"
  with_items:
    - regexp: ^PasswordAuthentication
      line: PasswordAuthentication no
    - regexp: ^PermitRootLogin
      line: PermitRootLogin yes
    - regexp: ^Port
      line: Port 22
    - regexp: ^UseDNS
      line: UseDNS no
    - regexp: ^PermitEmptyPasswords
      line: PermitEmptyPasswords no
    - regexp: ^ChallengeResponseAuthentication
      line: ChallengeResponseAuthentication no
    - regexp: ^GSSAPIAuthentication
      line: GSSAPIAuthentication no
    - regexp: ^X11Forwarding
      line: X11Forwarding no
  notify: Restart ssh

- name: Open SSH ports
  community.general.ufw:
    state: "{{ item.state }}"
    rule: "{{ item.rule }}"
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
  with_items:
    - name: SSH
      state: enabled
      rule: allow
      port: "22"
      proto: tcp
  notify: Reload ufw
