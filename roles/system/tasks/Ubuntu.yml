---
- name: System | Hostname | {{ ansible_distribution }}
  when:
    - not ansible_host_environment_is_wsl
  block:
    - name: System | Set hostname to inventory hostname
      ansible.builtin.hostname:
        name: "{{ inventory_hostname | default('ubuntu') }}"

    - name: System | Set /etc/hosts to include inventory hostname
      ansible.builtin.blockinfile:
        path: /etc/hosts
        block: |
          127.0.0.1  localhost
          {{ loop_host | default('127.0.1.1') }}  {{ inventory_hostname | default('ubuntu') }}

- name: System | {{ ansible_distribution }} | User
  when:
    - not ansible_host_environment_is_wsl
  block:
    - name: System | Ensure groups are present
      ansible.builtin.group:
        name: "{{ item }}"
        state: present
      loop:
        - sudo

    - name: System | Ensure sudo group has sudo privileges
      ansible.builtin.lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: ^%sudo
        line: "%sudo ALL=(ALL:ALL) ALL"
        validate: /usr/sbin/visudo -cf %s

    - name: System | Give sudo access to {{ ansible_user }}
      ansible.builtin.blockinfile:
        path: /etc/sudoers
        insertafter: "%sudo ALL=(ALL:ALL) ALL"
        block: | # pragma: allowlist secret
          # Gives sudo access to the devops group
          {{ ansible_user }}        ALL=(ALL)       NOPASSWD: ALL

- name: System | {{ ansible_distribution }} | Install packages
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop:
    - apt-transport-https
    - bat
    - curl
    - git
    - gnupg
    - gpg
    - htop
    - jq
    - nano
    - nfs-common
    - open-iscsi
    - tree
    - wget
  become: true

- name: System | {{ ansible_distribution }} | Install monitoring packages
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop:
    - prometheus-node-exporter
  become: true
  when:
    - not ansible_host_environment_is_wsl

- name: System | {{ ansible_distribution }} | Install qemu-guest-agent
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  loop:
    - qemu-guest-agent
  become: true
  when:
    - not ansible_host_environment_is_wsl
    - ansible_virtualization_role == "guest"
  notify: Start qemu

- name: System | {{ ansible_distribution }} | Disable Cloud-Init
  block:
    - name: Cloud-Init | Check for Cloud-Init folder
      ansible.builtin.stat:
        path: /etc/cloud/
      register: etc_cloud_folder
    - name: System | Cloud-Init | Disable /etc/cloud/cloud-init.disabled
      ansible.builtin.copy:
        dest: /etc/cloud/cloud-init.disabled
        content: disabled by ansible\n
        owner: root
        group: root
        mode: "0644"
      when:
        - etc_cloud_folder.stat.exists
    - name: System | Cloud-Init | Remove package
      ansible.builtin.apt:
        name: "{{ item }}"
        state: absent
      loop:
        - cloud-init
      when:
        - etc_cloud_folder.stat.exists
    - name: System | Cloud-Init | Disable all services
      ansible.builtin.service:
        name: "{{ item }}"
        state: stopped
      loop:
        - cloud-config.service
        - cloud-final.service
        - cloud-init-local.service
        - cloud-init.service
      when:
        - etc_cloud_folder.stat.exists
  rescue:
    - name: System | Cloud-Init | Something wrong
      ansible.builtin.debug:
        msg: Playbook had an issue with Cloud-Init disabling.
