---
- name: System | Hostname
  when:
    - not ansible_host_environment_is_wsl
  block:
    - name: System | Set hostname to inventory hostname
      ansible.builtin.hostname:
        name: "{{ hostname | default('ubuntu') }}"

    - name: System | Set /etc/hosts to include inventory hostname
      ansible.builtin.blockinfile:
        path: /etc/hosts
        block: |
          127.0.0.1  localhost
          {{ loop_host | default('127.0.1.1') }}  {{ hostname | default('ubuntu') }}

- name: System | Groups and Users
  block:
    - name: System | Ensure groups are present
      ansible.builtin.group:
        name:
          - sudo
        state: present
      become: true

    - name: System | Ensure sudo group has sudo privileges
      ansible.builtin.lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: ^%sudo
        line: "%sudo ALL=(ALL:ALL) ALL"
        validate: /usr/sbin/visudo -cf %s

    - name: System | Give sudo access to {{ ansible_user }}
      ansible.builtin.blockinfile:
        path: /etc/sudoers
        insertafter: "%sudo   ALL=(ALL:ALL) ALL"
        block: | # pragma: allowlist secret
          # Gives passwordless sudoer to user
          {{ ansible_user }}   ALL=(ALL)   NOPASSWD: ALL

- name: System | Install default packages
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - bind9-dnsutils
      - curl
      - git
      - nano
      - pipx
      - wget
    state: present
  become: true

- name: System | Install qemu-guest-agent
  ansible.builtin.apt:
    name:
      - qemu-guest-agent
    state: present
  become: true
  when:
    - not ansible_host_environment_is_wsl
    - ansible_virtualization_role == "guest"
  notify: System | Start qemu

- name: System | Create .config directory exists
  ansible.builtin.file:
    path: "{{ ansible_home }}/.config"
    state: directory
    recurse: true
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"
